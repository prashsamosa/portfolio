---
const path = Astro.url.pathname;
const crumbs = path.split("/").filter((crumb) => crumb);
crumbs.unshift("/");

const links: Record<string, string> = {};
let tmpLink = "";

crumbs.forEach((crumb, index) => {
  tmpLink = tmpLink.concat(index > 1 ? "/" : "", crumb);
  const linkName =
    crumb === "/" ? "Home" : crumb[0].toUpperCase() + crumb.slice(1);
  links[linkName] = tmpLink;
});
---

<nav aria-label="Breadcrumb">
  <ol class="breadcrumbs">
    {
      Object.entries(links).map(([name, url], index, array) => (
        <li class="breadcrumbs__item">
          <a
            href={url}
            class={`breadcrumbs__link ${
              index === array.length - 1 ? "breadcrumbs__link--current" : ""
            }`}
            aria-current={index === array.length - 1 ? "page" : undefined}
          >
            {name}
          </a>
          {index < array.length - 1 && (
            <span class="breadcrumbs__separator">/</span>
          )}
        </li>
      ))
    }
  </ol>
</nav>

<style>
  .breadcrumbs {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .breadcrumbs__item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .breadcrumbs__link {
    color: rgba(var(--primary-text-value), 0.4);
    transition: color 0.3s ease;
    text-decoration: none;
  }

  .breadcrumbs__link--current {
    color: rgba(var(--primary-text-value), 1);
  }

  .breadcrumbs__link:hover:not(.breadcrumbs__link--current) {
    color: rgba(var(--primary-text-value), 0.7);
  }

  .breadcrumbs__separator {
    color: rgba(var(--primary-text-value), 0.3);
  }
</style>
